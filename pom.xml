<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.lzh.springcloud</groupId>
  <artifactId>cloud2020</artifactId>
  <version>1.0-SNAPSHOT</version>
  <modules>
    <module>clound-provider-payment8001</module>
    <module>cloud-consumer-order-08</module>
      <module>cloud-api-commons</module>
    <module>cloud-eureka-server7001</module>
    <module>cloud-eureka-server7002</module>
      <module>clound-provider-payment8002</module>
      <module>clound-provider-payment8004</module>
    <module>cloud-consumerzk-order80</module>
      <module>cloud-providerconsul-payment8006</module>
      <module>cloud-consumerconsul-order80</module>
      <module>cloud-consumer-feign-order80</module>
      <module>cloud-provider-hystrix-payment8001</module>
      <module>cloud-consumer-feign-hystrix-order80</module>
      <module>cloud-consumer-hystrix-dashboard9001</module>
      <module>cloud-gateway-gateway9527</module>
      <module>cloud-config-center-3344</module>
      <module>cloud-config-client-3355</module>
      <module>cloud-config-client-3366</module>
      <module>cloud-stream-rabbitmq-provider8801</module>
      <module>cloud-stream-rabbitmq-consumer8802</module>
      <module>cloud-stream-rabbitmq-consumer8803</module>
    <module>cloudalibaba-provider-payment9001</module>
      <module>cloudalibaba-provider-payment9002</module>
    <module>cloudalibaba-consumer-nacos-order83</module>
      <module>cloudalibaba-config-nacos-client3377</module>
      <module>cloudalibaba-sentinel-service8401</module>
      <module>cloudalibaba-provider-payment9003</module>
    <module>cloudalibaba-provider-payment9004</module>
  </modules>
  <!--  以下配置的意思是使用maven分模块管理，都会有一个父级项目 ，-->
<!--  pom文件一个重要的属性就是packaging（打包类型），一般来说-->
<!--  所有的父级项目的packaging都为pom，packaging默认类型jar类型，-->
<!--  如果不做配置，maven会将该项目打成jar包。-->
  <packaging>pom</packaging>

  <!--统一管理jar包版本-->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <junit.version>4.12</junit.version>
    <log4j.version>1.2.17</log4j.version>
    <lombok.version>1.16.18</lombok.version>
    <mysql.version>5.1.47</mysql.version>
    <druid.version>1.1.14</druid.version>
    <mybatis.spring.boot.version>2.1.1</mybatis.spring.boot.version>
  </properties>

<!--  dependencyManagement提供了一种管理依赖版本号的方式-->
<!--  通常会在一个组织或者项目的最顶层的父pom看到dependencyManagement元素-->
<!--  使用pom中的dependencyManagement元素能让所有在子项目中引用一个依赖而不用显式的列出版本号-->
<!--  maven会沿着父子层次向上走，直到找到一个拥有dependencyManagement元素的项目，然后他就会使用-->
<!--  dependencyManagement元素中指定的版本号-->
<!--  比如：dependencyManagement中有一个mysql依赖，指定版本为5.1.47；然后子工程中可以不用指定版本号-->
<!--  <dependency>-->
<!--    <groupId>mysql</groupId>-->
<!--    <artifactId>mysql-connector-java</artifactId>-->
<!--  </dependency>-->
<!--  如果需要升级版本，只需要在父pom中改一下版本号就全体升级，如果某个子模块需要用不同的版本，直接指定就行-->
  <dependencyManagement>
        <dependencies>
          <!--spring boot 2.2.2-->
          <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-dependencies</artifactId>
            <version>2.2.2.RELEASE</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
          <!--spring cloud Hoxton.SR1-->
          <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>Hoxton.SR1</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
          <!--spring cloud 阿里巴巴-->
          <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-alibaba-dependencies</artifactId>
            <version>2.1.0.RELEASE</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
          <!--mysql-->
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
            <scope>runtime</scope>
          </dependency>
          <!-- druid-->
          <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
          </dependency>
            <!--mybatis-->
            <dependency>
              <groupId>org.mybatis.spring.boot</groupId>
              <artifactId>mybatis-spring-boot-starter</artifactId>
              <version>${mybatis.spring.boot.version}</version>
            </dependency>
            <!--junit-->
            <dependency>
              <groupId>junit</groupId>
              <artifactId>junit</artifactId>
              <version>${junit.version}</version>
            </dependency>
            <!--log4j-->
            <dependency>
              <groupId>log4j</groupId>
              <artifactId>log4j</artifactId>
              <version>${log4j.version}</version>
            </dependency>
          <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-project-info-reports-plugin</artifactId>
            <version>3.0.0</version>
          </dependency>
        </dependencies>
  </dependencyManagement>

  <build>
    <finalName>cloud2020</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <fork>true</fork>
          <addResources>true</addResources>
        </configuration>
      </plugin>
    </plugins>
  </build>


</project>
